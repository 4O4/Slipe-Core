-- Generated by CSharp.lua Compiler
local System = System
local MultiTheftAuto = MultiTheftAuto
local MTASharedWrapper
System.import(function (out)
  MTASharedWrapper = out.MTASharedWrapper
end)
System.namespace("MTASharedWrapper.CollisionShapes", function (namespace)
  namespace.class("CollisionShape", function (namespace)
    local getShapeType, IsInside, IsElementWithin, GetElementsWithin, HandleEvent
    getShapeType = function (this)
      return MultiTheftAuto.Shared.GetColShapeType(this.element)
    end
    IsInside = function (this, position)
      return MultiTheftAuto.Shared.IsInsideColShape(this.element, position.X, position.Y, position.Z)
    end
    IsElementWithin = function (this, element)
      return MultiTheftAuto.Shared.IsElementWithinColShape(this.element, element:getMTAElement())
    end
    GetElementsWithin = function (this)
      return MultiTheftAuto.Shared.GetListFromTable(MultiTheftAuto.Shared.GetElementsWithinColShape(this.element))
    end
    HandleEvent = function (this, eventName, element, p1, p2, p3, p4, p5, p6, p7, p8)
      repeat
        local default = eventName
        if default == "onColShapeHit" then
          local extern = this.OnHit
          if extern ~= nil then
            extern(System.cast(MTASharedWrapper.Element, p1), System.cast(System.Boolean, p2))
          end
          break
        elseif default == "onClientColShapeHit" then
          local ref = this.OnHit
          if ref ~= nil then
            ref(System.cast(MTASharedWrapper.Element, p1), System.cast(System.Boolean, p2))
          end
          break
        elseif default == "onColShapeLeave" then
          local out = this.OnLeave
          if out ~= nil then
            out(System.cast(MTASharedWrapper.Element, p1), System.cast(System.Boolean, p2))
          end
          break
        elseif default == "onClientColShapeLeave" then
          local try = this.OnLeave
          if try ~= nil then
            try(System.cast(MTASharedWrapper.Element, p1), System.cast(System.Boolean, p2))
          end
          break
        end
      until 1
    end
    return {
      __inherits__ = function (out)
        return {
          out.MTASharedWrapper.Element
        }
      end,
      getShapeType = getShapeType,
      IsInside = IsInside,
      IsElementWithin = IsElementWithin,
      GetElementsWithin = GetElementsWithin,
      HandleEvent = HandleEvent
    }
  end)
end)
