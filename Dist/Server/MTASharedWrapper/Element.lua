-- Generated by CSharp.lua Compiler
local System = System
local MultiTheftAuto = MultiTheftAuto
local SystemNumerics = System.Numerics
local MTASharedWrapper
local MTASharedWrapperCollisionShapes
System.import(function (out)
  MTASharedWrapper = out.MTASharedWrapper
  MTASharedWrapperCollisionShapes = MTASharedWrapper.CollisionShapes
end)
System.namespace("MTASharedWrapper", function (namespace)
  namespace.class("Element", function (namespace)
    local getRoot, getMTAElement, getPosition, setPosition, getRotation, setRotation, getDimension, setDimension, 
    getInterior, setInterior, getFrozen, setFrozen, getAlpha, setAlpha, getHealth, setHealth, 
    getVelocity, setVelocity, getModel, setModel, getCollisionShape, getType, Destroy, AttachTo, 
    AttachTo1, AddEventHandler, HandleEvent, class, __ctor1__, __ctor2__
    __ctor1__ = function (this)
    end
    __ctor2__ = function (this, mtaElement)
      this.element = mtaElement
      MTASharedWrapper.ElementManager.getInstance():RegisterElement(this)
    end
    getRoot = function ()
      return MTASharedWrapper.ElementManager.getInstance():getRoot()
    end
    getMTAElement = function (this)
      return this.element
    end
    getPosition = function (this)
      local position = MultiTheftAuto.Shared.GetElementPosition(this.element)
      return SystemNumerics.Vector3(position[1], position[2], position[3])
    end
    setPosition = function (this, value)
      MultiTheftAuto.Shared.SetElementPosition(this.element, value.X, value.Y, value.Z, false)
    end
    getRotation = function (this)
      local rotation = MultiTheftAuto.Shared.GetElementRotation(this.element, "default")
      return SystemNumerics.Vector3(rotation[1], rotation[2], rotation[3])
    end
    setRotation = function (this, value)
      MultiTheftAuto.Shared.SetElementRotation(this.element, value.X, value.Y, value.Z, "default", false)
    end
    getDimension = function (this)
      return MultiTheftAuto.Shared.GetElementDimension(this.element)
    end
    setDimension = function (this, value)
      MultiTheftAuto.Shared.SetElementDimension(this.element, value)
    end
    getInterior = function (this)
      return MultiTheftAuto.Shared.GetElementInterior(this.element)
    end
    setInterior = function (this, value)
      local position = getPosition(this)
      MultiTheftAuto.Shared.SetElementInterior(this.element, value, position.X, position.Y, position.Z)
    end
    getFrozen = function (this)
      return MultiTheftAuto.Shared.IsElementFrozen(this.element)
    end
    setFrozen = function (this, value)
      MultiTheftAuto.Shared.SetElementFrozen(this.element, value)
    end
    getAlpha = function (this)
      return MultiTheftAuto.Shared.GetElementAlpha(this.element)
    end
    setAlpha = function (this, value)
      MultiTheftAuto.Shared.SetElementAlpha(this.element, value)
    end
    getHealth = function (this)
      return MultiTheftAuto.Shared.GetElementHealth(this.element)
    end
    setHealth = function (this, value)
      MultiTheftAuto.Shared.SetElementHealth(this.element, value)
    end
    getVelocity = function (this)
      local velocity = MultiTheftAuto.Shared.GetElementVelocity(this.element)
      return SystemNumerics.Vector3(velocity[1], velocity[2], velocity[3])
    end
    setVelocity = function (this, value)
      MultiTheftAuto.Shared.SetElementVelocity(this.element, value.X, value.Y, value.Z)
    end
    getModel = function (this)
      return MultiTheftAuto.Shared.GetElementModel(this.element)
    end
    setModel = function (this, value)
      MultiTheftAuto.Shared.SetElementModel(this.element, value)
    end
    getCollisionShape = function (this)
      return System.cast(MTASharedWrapperCollisionShapes.CollisionShape, MTASharedWrapper.ElementManager.getInstance():GetElement(MultiTheftAuto.Shared.GetElementColShape(this.element)))
    end
    getType = function (this)
      return MultiTheftAuto.Shared.GetElementType(this.element)
    end
    Destroy = function (this)
      return MultiTheftAuto.Shared.DestroyElement(this.element)
    end
    AttachTo = function (this, element, offset, rotationOffset)
      return MultiTheftAuto.Shared.AttachElements(this.element, element.element, offset.X, offset.Y, offset.Z, rotationOffset.X, rotationOffset.Y, rotationOffset.Z)
    end
    AttachTo1 = function (this, element, offset)
      return AttachTo(this, element, offset:__clone__(), SystemNumerics.Vector3(0, 0, 0))
    end
    AddEventHandler = function (this, eventName, propagated, priorty)
      MTASharedWrapper.ElementManager.getInstance():AddEventHandler(this, eventName, propagated, priorty)
    end
    HandleEvent = function (this, eventName, source, p1, p2, p3, p4, p5, p6, p7, p8)
      System.Console.WriteLine(eventName .. " has been triggered")

      if this == getRoot() then
        local default = class.OnRootEvent
        if default ~= nil then
          default(eventName, source, p1, p2, p3, p4, p5, p6, p7, p8)
        end
      end
    end
    class = {
      getRoot = getRoot,
      getMTAElement = getMTAElement,
      getPosition = getPosition,
      setPosition = setPosition,
      getRotation = getRotation,
      setRotation = setRotation,
      getDimension = getDimension,
      setDimension = setDimension,
      getInterior = getInterior,
      setInterior = setInterior,
      getFrozen = getFrozen,
      setFrozen = setFrozen,
      getAlpha = getAlpha,
      setAlpha = setAlpha,
      getHealth = getHealth,
      setHealth = setHealth,
      getVelocity = getVelocity,
      setVelocity = setVelocity,
      getModel = getModel,
      setModel = setModel,
      getCollisionShape = getCollisionShape,
      getType = getType,
      Destroy = Destroy,
      AttachTo = AttachTo,
      AttachTo1 = AttachTo1,
      AddEventHandler = AddEventHandler,
      HandleEvent = HandleEvent,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      }
    }
    return class
  end)
end)
