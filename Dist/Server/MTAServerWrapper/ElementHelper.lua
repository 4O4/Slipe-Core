-- Generated by CSharp.lua Compiler
local System = System
local MultiTheftAuto = MultiTheftAuto
local DictTypeString = System.Dictionary(System.Type, System.String)
local MTAServerWrapper
local MTASharedWrapper
System.import(function (out)
  MTAServerWrapper = out.MTAServerWrapper
  MTASharedWrapper = out.MTASharedWrapper
end)
System.namespace("MTAServerWrapper", function (namespace)
  namespace.class("ElementHelper", function (namespace)
    local ElementTypeNames, GetByType, static
    static = function (this)
      local default = DictTypeString()
      default:set(System.typeof(MTASharedWrapper.Element), "element")
      default:set(System.typeof(MTAServerWrapper.Vehicle), "vehicle")
      default:set(System.typeof(MTAServerWrapper.Player), "player")
      ElementTypeNames = default
    end
    GetByType = function (T)
      local elements = System.List(T)()

      if not ElementTypeNames:ContainsKey(System.typeof(T)) then
        return elements
      end

      local mtaElements = MultiTheftAuto.Shared.GetListFromTable(MultiTheftAuto.Server.GetElementsByType(ElementTypeNames:get(System.typeof(T))))
      for _, mtaElement in System.each(mtaElements) do
        local element = MTASharedWrapper.ElementManager.getInstance():GetElement(System.cast(MultiTheftAuto.MTAElement, mtaElement))
        if element ~= nil and System.is(element, T) then
          elements:Add(System.cast(T, element))
        end
      end

      return elements
    end
    return {
      GetByType = GetByType,
      static = static
    }
  end)
end)
